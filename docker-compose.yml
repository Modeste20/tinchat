version: "3.2"

services:

  tinchat:
    # You don't have to create the image manually if you provide the build which builds the image from the Dockerfile.
    build:
      context: .
      dockerfile: Dockerfile
    image: tanvirtin/tinchat
    container_name: tinchat
    restart: unless-stopped
    env_file: .env
    # Exposing two ports one for REST api (8000) and the other for socket connection (8001).
    ports:
      - 8000:8000
      - 8001:8001
    # Command the run after the container has been created.
    command: yarn start

  db:
    image: postgres
    restart: unless-stopped
    container_name: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
      - pgconf:/etc/postgresql
      - pglog:/var/log/postgresql
    ports:
      - "5432:5432"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.3.2
    restart: unless-stopped
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - cluster.name=docker-cluster
      - cluster.initial_master_nodes=elasticsearch
      - "ES_JAVA_OPTS=-Xms256M -Xmx256M"
      - http.cors.enabled=true
      - http.cors.allow-origin=*
      - network.host=_eth0_
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    ports:
      - 9200:9200

volumes:
  pgdata:
    driver: local
  pgconf:
    driver: local
  pglog:
    driver: local